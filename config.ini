[DEFAULT]
# Example configuration file
# If you need details about the syntax, see https://docs.python.org/3/library/configparser.html

# Your Ethereum wallet's public key
# You can copy-paste it from your MetaMask browser extension

# this has a typo I guess but it still works because of the automatic validation?
# Fake address for demonstration:
user_wallet_public_key = 0x6c3274937AD1DfF7bb8eC2BeC17D7530b017a67c

# Your Ethereum wallet's private key in 64-byte hex form
# This is only needed if you want the buy order to succeed.
# Example:
user_wallet_private_key = e05a40d3e10d07cd9c2a851f96a9dc4cb1461608a22cd694539314c0504fbb9d


# The smart contract address of the token you want to trade
# On EtherDelta.com, click "Tokens" in the top-right hand corner,
# click the token you want to trade and copy-paste the 0x... address.
# Example: Smart Contract: 0x9742fa8cb51d294c8267ddfead8582e16f18e421
#
# These high-volume markets such as GRX and PPT do not seem to work with low gas prices such as 1Gwei.
# GRX:
#token_to_trade = 0x219218f117DC9348b358b8471c55A073E5e0dA0b
# PPT:
#token_to_trade = 0xd4fa1460F537bb9085d22C7bcCB5DD450Ef28e3a

# These low volume markets work with low gas prices such as 1Gwei:
# Aeternity:
#token_to_trade = 0x5ca9a71b1d01849c0a95490cc00559717fcf0d1d
# TenX
token_to_trade1 = 0xd4fa1460f537bb9085d22c7bccb5dd450ef28e3a
token_to_trade2 = 0xB97048628DB6B661D4C2aA833e95Dbe1A905B280
token_to_trade3 = 0xd26114cd6ee289accf82350c8d8487fedb8a0c07
token_to_trade4 = 0x219218f117DC9348b358b8471c55A073E5e0dA0b
token_to_trade5 = 0x5ca9a71b1d01849c0a95490cc00559717fcf0d1d	
token_to_trade6 = 0x12b19d3e2ccc14da04fae33e63652ce469b3f2fd
token_to_trade7 = 0xaa7a9ca87d3694b5755f213b5d04094b8d0f0a6f
token_to_trade8 = 0x8f3470a7388c05ee4e7af3d01d8c722b0ff52374
token_to_trade9 = 0x5d65d971895edc438f465c17db6992698a52318d
token_to_trade10 = 0x4ceda7906a5ed2179785cd3a40a69ee8bc99c466
